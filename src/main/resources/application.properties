# Quarkus Logging
quarkus.log.console.enable=true
quarkus.log.console.format= %-5p [%c] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.color=false

# ##########        Quarkus     ######### #
# In local environment, do not conflict with FHIR Server (that is likely also binding to 8080)
%dev.quarkus.http.port=9090
###########################################

# ###########   FHIR Server Interaction     ########### #
%dev.com.redhat.naps.vaccinationscheduler.rest.FhirServerClient/mp-rest/url=http://localhost:8080

# Time slot duration (between start and end times) between FHIR Appointments when pushing to FHIR Server
%dev.com.redhat.naps.vaccinationscheduler.timeslotduration.minutes=30

# FHIR Server will need Patient, Hospital and Practiction data specific to your designated region
%dev.com.redhat.naps.vaccinationscheduler.seed.fhir.server.at.startup=true

# For each hospital, a hospital, practitioners and patient data will be generated and used to seed the FHIR server
%dev.com.redhat.naps.vaccinationscheduler.hospitalGeneratorCount=3
%dev.com.redhat.naps.vaccinationscheduler.patientGeneratorCount=5

# Default is Atlanta (only because vaccine scheduling web app is currently hard-coded to Atlanta geo coordinates)
%dev.com.redhat.naps.vaccinationscheduler.patientGeneratorState=Georgia
#%dev.com.redhat.naps.vaccinationscheduler.patientGeneratorCity=Atlanta

# ##################################################### #


########################
# OptaPlanner properties
########################

# The solver runs for 5 minutes. To run for 30 seconds use "30s" and for 2 hours use "2h".
quarkus.optaplanner.solver.termination.spent-limit=5m

# To change how many solvers to run in parallel
# optaplanner.solver-manager.parallel-solver-count=4
# To run increase CPU cores usage per solver
# quarkus.optaplanner.solver.move-thread-count=2

# To detect common bugs in your code
# quarkus.optaplanner.solver.environment-mode=FULL_ASSERT

# OPEN API
quarkus.swagger-ui.always-include=true

# CORS
quarkus.http.cors=true
