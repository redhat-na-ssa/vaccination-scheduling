########################
# OptaPlanner properties
########################

# The solver runs for 5 minutes. To run for 30 seconds use "30s" and for 2 hours use "2h".
quarkus.optaplanner.solver.termination.spent-limit=5m

# To change how many solvers to run in parallel
# optaplanner.solver-manager.parallel-solver-count=4
# To run increase CPU cores usage per solver
# quarkus.optaplanner.solver.move-thread-count=2

# To detect common bugs in your code
# quarkus.optaplanner.solver.environment-mode=FULL_ASSERT

# Quarkus Logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.color=false

# Postgresql
quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.database.generation=none

# PostgreSQL Dev
%dev.quarkus.datasource.username=vaccine
%dev.quarkus.datasource.password=vaccine
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/vaccine

# OPEN API
quarkus.swagger-ui.always-include=true

# CORS
quarkus.http.cors=true


##########      seed data files     #########
com.redhat.vaccination.scheduling.seed.file.path=/mocks/original_vaccination_schedule_mock.json
com.redhat.vaccination.scheduling.seed.dump.to.file=false                                           # optional
com.redhat.vaccination.scheduling.seed.dump.path=/tmp/vschedule.json                                # optional

com.redhat.vaccination.scheduling.generatePatients=false                                            # optional; false
com.redhat.vaccination.scheduling.patientGeneratorCount=10                                          # optional; default = 50

# optional; default = /tmp
com.redhat.vaccination.scheduling.patientGeneratorBaseDir=/tmp
#############################################
